services:
  ui:    
    container_name: ui
    restart: on-failure
    build:
      context: ./src/CodeRunner.UI
      dockerfile: ./Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - executor

  executor:    
    container_name: executor
    restart: on-failure
    build:
      context: ./src
      dockerfile: ./CodeRunner.Executor/Dockerfile
    ports:
      - "5136:80"
    depends_on:
     - cache
     - database
     - kafka

  worker:    
    container_name: worker
    restart: on-failure
    build:
      context: ./src
      dockerfile: ./CodeRunner.Worker/Dockerfile
    depends_on:
     - kafka
     - database

  cache:
    container_name: cache
    image: redis:latest
    restart: on-failure
    ports:
      - 6379:6379  
      
  database:
    container_name: mongo
    image: mongo:latest
    restart: on-failure
    ports:
      - 27017:27017

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    restart: on-failure
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    restart: on-failure
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    depends_on:
      - zookeeper

  kowl:
    container_name: kowl
    image: quay.io/cloudhut/kowl:v1.4.0
    restart: on-failure
    volumes:
    - ./kowl_config:/etc/kowl/
    ports:
    - "8081:8080"
    environment:
      - KAFKA_BROKERS=kafka:29092
    depends_on:
      - kafka